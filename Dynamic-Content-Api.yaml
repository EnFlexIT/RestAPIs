openapi: 3.0.0
info:
  title: EnFlex.IT - Dynamic Content Api
  description: This is the Definition of the Api to dynamically fetch content for any enflex.it application
  contact:
    name: EnFlex.IT
    url: https://www.enflex.it
    email: admin@enflex.it
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1

servers:
  - url: http://localhost:8080
  - url: https://www.enflex.it

# --- Api-Paths -------------------------------------------
paths:
  /getContent/{menueID}:
    get:
      summary: Returns the content for the specified ID
      description: |
        Returns content information.
      parameters:
      - name: menueID
        in: path
        description: numeric ID of the content
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          $ref: '#/components/responses/ContentArray'

  /setContent/:
    put:
      summary: Enables to update content
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/SiteContentListUpdate' 
      responses:
        "201":
          description: Content was updated!

# --- Components  -----------------------------------------
components:

  # --- Responses -----------------------------------------
  responses:

    ContentArray:
      description: Success - Content
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SiteContentList'

  # --- Schemas & type definition -------------------------
  schemas:

    SiteContentListUpdate:
      type: object
      properties:
        menuID:
          type: integer
        contentList:
          type: array
          items:
            $ref: '#/components/schemas/AbstractSiteContent'

    SiteContentList:
      type: object
      properties:
        contentList:
          type: array
          items:
            $ref: '#/components/schemas/AbstractSiteContent'
      required:
        - "contentList"

    AbstractSiteContent:
      type: object
      properties:
        uniqueContentID:
          type: integer
        editable:
          type: boolean
        updatePeriodInSeconds:
          type: integer
      required:
      - editable
      - uniqueContentID
      - updatePeriodInSeconds
      discriminator:
        propertyName: AbstractSiteContentType
        mapping:
          SiteContentMedia: '#/components/schemas/SiteContentMedia'
          AbstractSiteContentChart: '#/components/schemas/AbstractSiteContentChart'
          SiteContentProperties: '#/components/schemas/SiteContentProperties'
          SiteContentTable: '#/components/schemas/SiteContentTable'
      # oneOf:
      #   - $ref: '#/components/schemas/SiteContentMedia'
      #   - $ref: '#/components/schemas/AbstractSiteContentChart'
      #   - $ref: '#/components/schemas/SiteContentProperties'
      #   - $ref: '#/components/schemas/SiteContentTable'

    SiteContentMedia:
      allOf:
        - $ref: '#/components/schemas/AbstractSiteContent'
        - type: object
          properties:
            mimeType:
              type: string
          required:
            - mimeType
          discriminator:
            propertyName: AbstractSiteContentType
            mapping:
              SiteContentText: '#/components/schemas/SiteContentText'
              SiteContentImage: '#/components/schemas/SiteContentImage'
      # oneOf:
      #   - $ref: '#/components/schemas/SiteContentText'
      #   - $ref: '#/components/schemas/SiteContentImage'

    SiteContentText:
      allOf:
        - $ref: '#/components/schemas/SiteContentMedia'
        - type: object
          properties:
            text:
              type: string
          required:
            - text

    SiteContentImage:
      allOf:
        - $ref: '#/components/schemas/SiteContentMedia'
        - type: object
          properties:
            dataInB64:
              type: string
          required:
            - dataInB64

    AbstractSiteContentChart:
      allOf:
        - $ref: '#/components/schemas/AbstractSiteContent'
        - type: object
          discriminator:
            propertyName: AbstractSiteContentType
            mapping:
              SiteContentXYChart: '#/components/schemas/SiteContentXYChart'
              SiteContentTimeSeriesChart: '#/components/schemas/SiteContentTimeSeriesChart'
      # oneOf:
      #   - $ref: '#/components/schemas/SiteContentXYChart'
      #   - $ref: '#/components/schemas/SiteContentTimeSeriesChart'

    SiteContentXYChart:
      allOf:
        - $ref: '#/components/schemas/AbstractSiteContentChart'

    SiteContentTimeSeriesChart:
      allOf:
        - $ref: '#/components/schemas/AbstractSiteContentChart'

    SiteContentProperties:
      allOf:
        - $ref: '#/components/schemas/AbstractSiteContent'
        - type: object
          properties:
            propertyEntries:
              type: array
              items: 
                $ref: '#/components/schemas/PropertyEntry'
          required:
            - propertyEntries

    PropertyEntry:
      properties:
        key:
          type: string
        value:
          type: string
        valueType:
          $ref: '#/components/schemas/ValueType'
      required:
        - key
        - value
        - valueType

    ValueType:
      type: string
      enum:
      - INTEGER
      - BOOLEAN
      - STRING
      - LONG
      - DOUBLE

    SiteContentTable:
      allOf:
        - $ref: '#/components/schemas/AbstractSiteContent'
        - type: object
          properties:
            header:
              type: array
              items:
                type: string
            dataType:
              type: array
              items:
                $ref: '#/components/schemas/ValueType'
            data:
              type: array
              items:
                $ref: '#/components/schemas/RowVector'
          required:
            - data
            - dataType
            - header

    RowVector:
      type: array
      items:
        type: string
